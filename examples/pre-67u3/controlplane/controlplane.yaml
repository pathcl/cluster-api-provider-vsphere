# Intended for use with vSphere <6.7u3
---
apiVersion: cluster.x-k8s.io/v1alpha2
kind: Machine
metadata:
  name: ${CLUSTER_NAME}0
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
spec:
  version: ${KUBERNETES_VERSION}
  bootstrap:
    configRef:
      apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
      kind: KubeadmConfig
      name: ${CLUSTER_NAME}0
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
    kind: VSphereMachine
    name: ${CLUSTER_NAME}0
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha2
kind: VSphereMachine
metadata:
  name: ${CLUSTER_NAME}0
  labels:
    cluster.x-k8s.io/control-plane: "true"
    cluster.x-k8s.io/cluster-name: "${CLUSTER_NAME}"
spec:
  datacenter: "${VSPHERE_DATACENTER}"
  network:
    devices:
    - networkName: "${VSPHERE_NETWORK}"
      dhcp4: true
      dhcp6: false
  numCPUs: ${VSPHERE_NUM_CPUS}
  memoryMiB: ${VSPHERE_MEM_MIB}
  diskGiB: ${VSPHERE_DISK_GIB}
  template: "${VSPHERE_TEMPLATE}"
---
apiVersion: bootstrap.cluster.x-k8s.io/v1alpha2
kind: KubeadmConfig
metadata:
  name: ${CLUSTER_NAME}0
spec:
  initConfiguration:
    nodeRegistration:
      name: "{{ ds.meta_data.hostname }}"
      criSocket: "/var/run/containerd/containerd.sock"
      kubeletExtraArgs:
        cloud-provider: vsphere
  clusterConfiguration:
    imageRepository: ${K8S_IMAGE_REPOSITORY}
    apiServer:
      extraArgs:
        cloud-provider: vsphere
        cloud-config: /etc/kubernetes/vsphere.conf
        audit-log-maxage: "100"
        audit-log-maxbackup: "10"
        audit-log-maxsize: "100"
        audit-log-path: "/var/log/kube-apiserver-audit.log"
        authorization-mode: "Node,RBAC"
        enable-admission-plugins: "NodeRestriction,AlwaysPullImages,ServiceAccount"
        insecure-port: "0"
        profiling: "false"
        request-timeout: "300s"
        tls-cipher-suites: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA"
      extraVolumes:
      - name: "cloud-config"
        hostPath: /etc/kubernetes/vsphere.conf
        mountPath: /etc/kubernetes/vsphere.conf
        readOnly: true
        pathType: File
    scheduler:
      extraArgs:
        profiling: "false"
        tls-cipher-suites: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA"
    controllerManager:
      extraArgs:
        cloud-provider: vsphere
        cloud-config: /etc/kubernetes/vsphere.conf
        profiling: "false"
        tls-cipher-suites: "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_128_GCM_SHA256,TLS_RSA_WITH_AES_256_GCM_SHA384,TLS_RSA_WITH_AES_128_CBC_SHA,TLS_RSA_WITH_AES_256_CBC_SHA"
        terminated-pod-gc-threshold: "10"
      extraVolumes:
      - name: "cloud-config"
        hostPath: /etc/kubernetes/vsphere.conf
        mountPath: /etc/kubernetes/vsphere.conf
        readOnly: true
        pathType: File
  files:
  - path: /etc/kubernetes/vsphere.conf
    owner: root:root
    permissions: "0600"
    encoding: base64
    content: |
      ${CLOUD_CONFIG_B64ENCODED}
  users:
  - name: capv
    sudo: "ALL=(ALL) NOPASSWD:ALL"
    sshAuthorizedKeys:
    - "${SSH_AUTHORIZED_KEY}"
  preKubeadmCommands:
  - hostname "{{ ds.meta_data.hostname }}"
  - echo "::1         ipv6-localhost ipv6-loopback" >/etc/hosts
  - echo "127.0.0.1   {{ ds.meta_data.hostname }} localhost" >>/etc/hosts
  - echo "{{ ds.meta_data.hostname }}" >/etc/hostname
